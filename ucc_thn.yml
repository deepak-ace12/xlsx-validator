required: &required
  Required:
    error_msg: Value can not be blank.

regex: &regex
  Regex:
    #regex to validate ip
    pattern: "^[a-zA-Z0-9_]+$"
    error_msg: Value do not match the pattern.
  <<: *required

max_length: &max_length
  Length:
    max: 30
    error_msg: Value is too long.
    trim: true
  <<: *required

min_length: &min_length
  Length:
    min: 3
    error_msg: Value is too short.
    trim: false
  <<: *required

options: &options
  Option:
    options: [Male, Female]
    error_msg: Invalid option.
    case_sensitive: false #set choice validator as case insensitive (by default is case sensitive)
  <<: *required

email: &email
  Email:
    error_msg: Invalid email address.
    trim: true
  <<: *required

premitive_int: &premitive_int
  Type:
    type: int
    error_msg: Must be an integer value.
    trim: true
  <<: *required

premitive_float: &premitive_float
  Type:
    type: float
    error_msg: Must be a decimal value.
    trim: true
  <<: *required

premitive_bool: &premitive_bool
  Type:
    type: bool
    error_msg: Must be a boolean value i.e. true, false, 0, 1.
    trim: true
  <<: *required

datetime: &datetime
  Datetime:
    format: "%d-%m-%Y %H:%M:%S"
    error_msg: "Datetime format must"
  <<: *required

date: &date
  Date:
    format: "%Y-%m-%d"
    error_mesg: Date format must be yyyy-mm-dd.
  <<: *required

excel_date: &excel_date
  ExcelDate:
    message: Must be a date value.
    trim: true
  <<: *required

comparator_gt: &comparator_gt
  Comparator:
    operation: "gt"
    threshold: 10
    error_msg: value should not be greater than 10.
  <<: *required

comparator_lt: &comparator_lt
  Comparator:
    operation: "lt"
    threshold: 0
    error_msg: value should not be less than 0.
  <<: *required

not_negative: &not_negative
  NonNegative:
    type: int
    error_msg: Must be a non negative value.
  <<: *required


# CASE: 1 - if column names are fixed but their positions are not,
# create the yaml file with column names
# CASE: 2 - if column names are not fixed but the position of the columns are,
# create the yaml file with column letters i.e. A, B, C, etc.
# look for COLUMN_CASES comment in validate_xlsx.py file

Example:
  excludes: ["Exclude 1", "Exclude 2"] #these columns will not be validated
  iterate_by_header_name: true # if headers are not fixed, set it to false. Iteration will be done by column_letter.
  validations:
    default:
      - <<: *required

    # default validator works for columns for which no validation is defined.
    # default validator does not work for excluded columns.

    columns:
      ID:
        - <<: *not_negative

      Title:
        - <<: *options
          Option:
            options: [Ms., Mr., Mrs.]

      First Name:
        - <<: *min_length

      Last Name:
        - <<: *max_length

      Gender:
        - <<: *options

      Email:
        - <<: *email

      Age:
        - <<: *not_negative

      CGPA:
        - <<: *comparator_gt
        - <<: *comparator_lt

      Married:
        - <<: *premitive_bool

      DOB:
        - <<: *excel_date

      Last Active:
        - <<: *datetime

      Next Login:
        - <<: *date

      Username:
        - <<: *regex
